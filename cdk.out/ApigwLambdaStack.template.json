{
 "Resources": {
  "getlambdaServiceRole04B81BEC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/get_lambda/ServiceRole/Resource"
   }
  },
  "getlambda73E90600": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95.zip"
    },
    "FunctionName": "get_method_lambda",
    "Handler": "get_method.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "getlambdaServiceRole04B81BEC",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "getlambdaServiceRole04B81BEC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/get_lambda/Resource",
    "aws:asset:path": "asset.962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "postlambdaServiceRole342CB485": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/post_lambda/ServiceRole/Resource"
   }
  },
  "postlambdaCB2B7422": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95.zip"
    },
    "FunctionName": "post_method_lambda",
    "Handler": "post_method.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "postlambdaServiceRole342CB485",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "postlambdaServiceRole342CB485"
   ],
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/post_lambda/Resource",
    "aws:asset:path": "asset.962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "apiC8550315": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "This is a rest api",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "Name": "rest_api",
    "Policy": {
     "Statement": [
      {
       "Action": "*",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Resource"
   }
  },
  "apiCloudWatchRoleAC81D93E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/CloudWatchRole/Resource"
   }
  },
  "apiAccount57E28B43": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "apiCloudWatchRoleAC81D93E",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "apiC8550315"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Account"
   }
  },
  "apiDeployment149F1294ae1c315d060274841c7fd390b11d30d8": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "This is a rest api",
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "DependsOn": [
    "apiGETECF0BD67",
    "apiOPTIONS5A1027A6",
    "apiPOST36368FF5"
   ],
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Deployment/Resource"
   }
  },
  "apiDeploymentStagedev96712F43": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "apiDeployment149F1294ae1c315d060274841c7fd390b11d30d8"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": true,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "RestApiId": {
     "Ref": "apiC8550315"
    },
    "StageName": "dev",
    "TracingEnabled": true
   },
   "DependsOn": [
    "apiAccount57E28B43"
   ],
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/DeploymentStage.dev/Resource"
   }
  },
  "apiOPTIONS5A1027A6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/OPTIONS/Resource"
   }
  },
  "apiGETApiPermissionApigwLambdaStackapi68FB2791GET017ABDFB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getlambda73E90600",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStagedev96712F43"
       },
       "/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/GET/ApiPermission.ApigwLambdaStackapi68FB2791.GET.."
   }
  },
  "apiGETApiPermissionTestApigwLambdaStackapi68FB2791GETE3135A8F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getlambda73E90600",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/GET/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/GET/ApiPermission.Test.ApigwLambdaStackapi68FB2791.GET.."
   }
  },
  "apiGETECF0BD67": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getlambda73E90600",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/GET/Resource"
   }
  },
  "apiPOSTApiPermissionApigwLambdaStackapi68FB2791POSTE22F1BE0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postlambdaCB2B7422",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/",
       {
        "Ref": "apiDeploymentStagedev96712F43"
       },
       "/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/POST/ApiPermission.ApigwLambdaStackapi68FB2791.POST.."
   }
  },
  "apiPOSTApiPermissionTestApigwLambdaStackapi68FB2791POSTADEA611C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postlambdaCB2B7422",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apiC8550315"
       },
       "/test-invoke-stage/POST/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/POST/ApiPermission.Test.ApigwLambdaStackapi68FB2791.POST.."
   }
  },
  "apiPOST36368FF5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "postlambdaCB2B7422",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "apiC8550315",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "apiC8550315"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/Default/POST/Resource"
   }
  },
  "apiUsagePlan1B3969C7": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "apiC8550315"
      },
      "Stage": {
       "Ref": "apiDeploymentStagedev96712F43"
      },
      "Throttle": {}
     }
    ],
    "Description": "This is a usage plan",
    "UsagePlanName": "usage_plan"
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/UsagePlan/Resource"
   }
  },
  "apiApiKey9B5BC9C9": {
   "Type": "AWS::ApiGateway::ApiKey",
   "Properties": {
    "Enabled": true,
    "StageKeys": [
     {
      "RestApiId": {
       "Ref": "apiC8550315"
      },
      "StageName": {
       "Ref": "apiDeploymentStagedev96712F43"
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api/ApiKey/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Qy26DMBD8ltyNW+ALSKpeqqooVc7RxmypC9iIXStCiH/P2kRNTjuzj5mxC52XuX7dwZUy03RZby96+WYwnZLWeelhuDSgl/fgDFvv1OHHPeMap8ESCVuVhUEvR99jHMS6KirPQIRMuopFuN4H0yHvgVDBaFtgvMIsd0hcjTadPmBljA+O1RuOvZ8HFCjdJyZR2+S3ATn1YTKY5D+Rf30Th3d0Itmpe0jJH0S8PnBOdgmt67+OSrGjtnVt3PgKPAa+p9xWBB+8ayynT6hnsXIvpc4LXez+yNpskhfYAfVxqzfMMksxcwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "apiEndpoint9349E63C": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "apiC8550315"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "apiDeploymentStagedev96712F43"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}