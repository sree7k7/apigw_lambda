{
 "Resources": {
  "getlambdaServiceRole04B81BEC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/get_lambda/ServiceRole/Resource"
   }
  },
  "getlambda73E90600": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95.zip"
    },
    "FunctionName": "get_method_lambda",
    "Handler": "get_method.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "getlambdaServiceRole04B81BEC",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "getlambdaServiceRole04B81BEC"
   ],
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/get_lambda/Resource",
    "aws:asset:path": "asset.962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "postlambdaServiceRole342CB485": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/post_lambda/ServiceRole/Resource"
   }
  },
  "postlambdaCB2B7422": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95.zip"
    },
    "FunctionName": "post_method_lambda",
    "Handler": "post_method.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "postlambdaServiceRole342CB485",
      "Arn"
     ]
    },
    "Runtime": "python3.12"
   },
   "DependsOn": [
    "postlambdaServiceRole342CB485"
   ],
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/post_lambda/Resource",
    "aws:asset:path": "asset.962bf96991c2aabdf72cd30ec0f30be3880a1f55b71e1354c1cdd882a4851c95",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "apigateway532B23AD": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Description": "This is a test API Gateway for GET and POST methods using api keys",
    "Name": "APIGw_get_post",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/Resource"
   }
  },
  "apigatewayDefaultStage0FA106C7": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "apigateway532B23AD"
    },
    "AutoDeploy": true,
    "StageName": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/DefaultStage/Resource"
   }
  },
  "apigatewayGETgetGetLambdaIntegration0948A039": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "apigateway532B23AD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "getlambda73E90600",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/GET--get/GetLambdaIntegration/Resource"
   }
  },
  "apigatewayGETgetGetLambdaIntegrationPermission4F4C5005": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getlambda73E90600",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apigateway532B23AD"
       },
       "/*/*/get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/GET--get/GetLambdaIntegration-Permission"
   }
  },
  "apigatewayGETget454F7992": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "apigateway532B23AD"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "GET /get",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "apigatewayGETgetGetLambdaIntegration0948A039"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/GET--get/Resource"
   }
  },
  "apigatewayPOSTpostPostLambdaIntegration664F578B": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "apigateway532B23AD"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "postlambdaCB2B7422",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/POST--post/PostLambdaIntegration/Resource"
   }
  },
  "apigatewayPOSTpostPostLambdaIntegrationPermissionA8A8F2E2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "postlambdaCB2B7422",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "apigateway532B23AD"
       },
       "/*/*/post"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/POST--post/PostLambdaIntegration-Permission"
   }
  },
  "apigatewayPOSTpost788C3A70": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "apigateway532B23AD"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "POST /post",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "apigatewayPOSTpostPostLambdaIntegration664F578B"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway/POST--post/Resource"
   }
  },
  "apigatewaystage70F14D22": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "apigateway532B23AD"
    },
    "AutoDeploy": true,
    "StageName": "testStage"
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/api_gateway_stage/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11P0W6DMAz8lr4Hb8AXtJWm7a2iH1C54DEPSBB2WlUR/94kqNK0p7vzna1zBWVdwvsO71K03VCMfIVwVmwHE0eXMOJ07RDCh7etsrPm+G3/8hMtE4tEtRrGCULjRkpGwtVIfUERUoF9gqjh4NuB9IBCBmfuUemOj1sF4VN13s+clhMkGYv0+dpG0qhxXjf2ZZX6BV9N/smcW1fTkDi/tGRygXSHbZ8DLyPyo7Mda37i9NAfZ99qKCuodr/CXCzeKk8EzYZPe1cCizMBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "ApigwLambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}